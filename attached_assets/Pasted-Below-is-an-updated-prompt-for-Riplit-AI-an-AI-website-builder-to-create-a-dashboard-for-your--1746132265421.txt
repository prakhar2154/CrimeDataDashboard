Below is an updated prompt for **Riplit AI**, an AI website builder, to create a dashboard for your Crime Data Analysis project. The prompt incorporates the provided `CrimeDataAnalysis1` MySQL database schema and sample data, ensuring the dashboard reflects the actual data structure and content. It specifies a dark, mysterious, yet user-friendly UI with a color palette suited for crime data analysis, includes sections for "About Our Project" and "Made By," and ensures a professional, functional website with a clear navigation panel. The database details are integrated to guide the data-driven features like tables, charts, and maps.

---

**Prompt for Riplit AI:**

Create a professional, fully functional web dashboard for a Crime Data Analysis project, designed to analyze and visualize crime data from the provided MySQL database (`CrimeDataAnalysis1`). The dashboard should connect to the database, which includes tables for crime reports, locations, police officers, police reports, social media posts, and weather data (detailed below). The UI must be dark, mysterious, yet clear and user-friendly, using a color palette that reflects the serious, investigative nature of crime data analysis. The vibe should evoke a detective’s workspace—moody but intuitive and easy to navigate. The website must be responsive, modern, and professional, with a focus on usability, accessibility, and visual appeal.

### Database Details
The dashboard should use the following MySQL database schema and sample data from `CrimeDataAnalysis1`:

#### Tables and Schema
1. **Location**:
   - Columns: `Location_ID` (varchar, PK), `Address` (varchar), `Geolocation` (varchar, e.g., "40.7128,-74.0060"), `Type_of_Address` (varchar, e.g., Residential, Commercial).
   - Sample Data: 20 records (e.g., `L01`, "123 Main St", "40.7128,-74.0060", "Residential").
2. **Crime_Report**:
   - Columns: `Crime_ID` (varchar, PK), `Date` (DATE), `Description` (varchar), `Type_of_Crime` (varchar, e.g., Theft, Assault), `Arrest_Status` (varchar, e.g., Arrested, No Arrest), `Location_ID` (varchar, FK to Location).
   - Sample Data: 20 records (e.g., `C01`, "2023-01-05", "Wallet stolen from parked car", "Theft", "No Arrest", "L01").
3. **Police_Officer**:
   - Columns: `Officer_ID` (varchar, PK), `Name` (varchar), `Position` (ENUM: Officer, Sergeant, Lieutenant, Captain, Chief), `Assigned_Area` (varchar).
   - Sample Data: 20 records (e.g., `PO_01`, "James Carter", "Sergeant", "Downtown Precinct").
4. **Police_Report**:
   - Columns: `Report_ID` (varchar, PK), `Date` (DATE), `Outcome` (varchar, e.g., Suspect identified), `Crime_ID` (varchar, FK to Crime_Report), `Officer_ID` (varchar, FK to Police_Officer).
   - Sample Data: 20 records (e.g., `R01`, "2023-01-07", "Suspect identified", "C01", "PO_05").
5. **Social_Media**:
   - Columns: `Post_ID` (varchar, PK), `Date` (DATE), `Content` (TEXT), `Sentiment` (varchar, e.g., Positive, Negative), `Location` (varchar, e.g., New York).
   - Sample Data: 20 records (e.g., `P01`, "2023-01-06", "Concerns about safety in the area.", "Negative", "New York").
6. **Weather_Data**:
   - Columns: `Weather_ID` (varchar, PK), `Date` (DATE), `Precipitation` (varchar, e.g., "0.2 in"), `Temperature` (varchar, e.g., "34°F"), `Wind_Speed` (varchar, e.g., "12 mph").
   - Sample Data: 20 records (e.g., `W01`, "2023-01-05", "0.2 in", "34°F", "12 mph").

The dashboard should fetch and display this data dynamically, either through direct MySQL integration or via API endpoints (e.g., `/api/crime-reports`, `/api/locations`).

### Requirements:

#### 1. **UI and Color Palette**
- **Color Palette**:
  - **Primary**: Deep navy blue (#1E3A8A) for backgrounds, headers, and navigation.
  - **Secondary**: Dark gray (#1F2937) for cards, tables, and content containers.
  - **Accent**: Muted red (#991B1B) for crime-related highlights, alerts, or buttons.
  - **Highlight**: Neon cyan (#22D3EE) for interactive elements (e.g., hover effects, chart lines).
  - **Text**: White (#FFFFFF) for primary text, light gray (#D1D5DB) for secondary text.
- **Typography**: Use `Inter` or `Roboto` for body text and `Montserrat` for headings. Ensure high contrast for accessibility.
- **Vibe**: Create a mysterious, investigative aesthetic with subtle gradients (navy to dark gray), frosted glass effects for modals, and neon cyan glows on hover. Keep the interface uncluttered and intuitive.
- **Animations**: Add subtle transitions (e.g., fade-ins for cards, hover scaling for buttons) for a polished feel.

#### 2. **Navigation Panel**
- Create a **fixed sidebar** (collapsible on mobile) styled in navy blue with neon cyan accents for active links.
- **Menu Items**:
  - **Home**: Main dashboard with summary stats and charts.
  - **Crime Reports**: Filterable table of `Crime_Report` data with visualizations.
  - **Locations**: Table and map using `Location` data.
  - **Officers**: List of `Police_Officer` records.
  - **Social Media**: Display `Social_Media` posts with sentiment.
  - **Weather Data**: Show `Weather_Data` correlated with crimes.
  - **About Our Project**: Page with content below.
  - **Made By**: Page or section with creators’ names.
- **Features**:
  - Smooth scrolling and active state highlighting.
  - Mobile-friendly hamburger menu expanding into a full-screen overlay.
  - Icons (e.g., magnifying glass for Crime Reports) with tooltips.

#### 3. **Dashboard Content (Home Page)**
- **Summary Cards**:
  - Total Crimes: Count of `Crime_Report` records (e.g., "20 Crimes").
  - Arrest Rate: Percentage of `Arrest_Status = 'Arrested'` (e.g., 7/20 = 35%).
  - Most Common Crime: Most frequent `Type_of_Crime` (e.g., "Theft: 5 Incidents").
  - Recent Crimes: Crimes in the last 30 days from May 2, 2025.
  - Style: Dark gray cards with white text, muted red borders.
- **Visualizations**:
  - **Bar Chart**: Crime counts by `Type_of_Crime` (Theft: 5, Assault: 5, etc.).
  - **Line Chart**: Crimes over time (Jan 2023–Jul 2024), grouped by month.
  - **Pie Chart**: `Arrest_Status` distribution (Arrested: 7, No Arrest: 6, Pending: 7).
  - **Map**: Plot `Location.Geolocation` with markers color-coded by `Type_of_Crime` (e.g., red for Assault, blue for Theft).
  - Use Chart.js for charts and `react-leaflet` for maps, with neon cyan lines on dark gray backgrounds.
- **Quick Filters**:
  - Dropdown: `Type_of_Crime` (Theft, Assault, Vandalism, Fraud, Cyber Crime).
  - Date Range Picker: Filter `Date`.
  - Dropdown: `Type_of_Address` (Residential, Commercial, Public, Industrial).
  - Style: Dark gray inputs with white text, neon cyan focus states.

#### 4. **Crime Reports Page**
- **Interactive Table**:
  - Columns: `Crime_ID`, `Date`, `Description`, `Type_of_Crime`, `Arrest_Status`, `Address` (from `Location`), `Officer Name` (from `Police_Report` and `Police_Officer`).
  - Features: Filter by keyword (Description, Type), sort by column, pagination (10 rows/page), "View Details" button.
  - Style: Dark gray table, white text, muted red hover, neon cyan sort icons.
  - SQL for Data:
    ```sql
    SELECT cr.*, l.Address, po.Name
    FROM Crime_Report cr
    LEFT JOIN Location l ON cr.Location_ID = l.Location_ID
    LEFT JOIN Police_Report pr ON cr.Crime_ID = pr.Crime_ID
    LEFT JOIN Police_Officer po ON pr.Officer_ID = po.Officer_ID;
    ```
- **Details Modal**:
  - Shows crime details, `Weather_Data` for the same `Date` (e.g., "Precipitation: 0.2 in"), and `Social_Media` posts for matching `Date` and `Location`.
  - Example: For `C01` (2023-01-05, L01), show `W01` weather and `P01` post ("Concerns about safety").
  - Style: Frosted glass (semi-transparent dark gray), white text, muted red close button.
- **Export Option**: Button to download filtered table as CSV.

#### 5. **About Our Project Page**
- **Content**:
  ```
  About Our Project

  The Crime Data Analysis Dashboard is a cutting-edge tool designed to empower users with deep insights into crime patterns and trends. Built to analyze data from various locations and time periods, our platform allows users to explore crime incidents, their locations, and related factors like weather and public sentiment. Whether you're a researcher, law enforcement professional, or community member, our intuitive interface makes it easy to filter and visualize data based on your specific needs.

  We provide interactive tables and dynamic charts to dissect crime types, arrest outcomes, geographic distributions, and correlations with external factors. From understanding theft trends in residential areas to analyzing assault rates during specific weather conditions, our dashboard delivers clear, data-driven answers. Explore the data, uncover hidden patterns, and make informed decisions with our comprehensive analysis tools.
  ```
- **Design**:
  - Full-width page with navy blue background, white text, and subtle gradient (navy to dark gray).
  - Hero image: Faint crime map or magnifying glass with muted red/cyan accents.
  - Centered text, Montserrat headings, Inter body text.
  - Button to return to Home (muted red with neon cyan hover).

#### 6. **Made By Section**
- **Content**:
  ```
  Made By

  This project was developed by:
  - Prakhar Prakash (RA2311003011382)
  - Shagun Sinha (RA2311003011386)

  We are dedicated to harnessing data for impactful insights. Thank you for exploring our Crime Data Analysis Dashboard!
  ```
- **Design**:
  - Dedicated page or footer section via navigation.
  - Dark gray background, white text, neon cyan names.
  - Circular badges for initials ("PP", "SS") with muted red borders.
  - Centered, minimal layout.

#### 7. **Data Integration**
- **Primary Method**: Connect to `CrimeDataAnalysis1` MySQL database via API endpoints:
  - `/api/crime-reports`: Joined data from `Crime_Report`, `Location`, `Police_Officer`.
  - `/api/locations`: `Location` data for maps/tables.
  - `/api/officers`: `Police_Officer` data.
  - `/api/social-media?date=2023-01-05&location=New York`: Filtered `Social_Media` posts.
  - `/api/weather?date=2023-01-05`: `Weather_Data` for a date.
- **Fallback**: Use provided sample data (20 records per table) as mock data if direct database integration isn’t supported. Provide instructions to replace with API calls.
- **Example Mock Data**:
  ```json
  {
    "crimeReports": [
      {"Crime_ID": "C01", "Date": "2023-01-05", "Description": "Wallet stolen from parked car", "Type_of_Crime": "Theft", "Arrest_Status": "No Arrest", "Location_ID": "L01"},
      // 19 more
    ],
    "locations": [
      {"Location_ID": "L01", "Address": "123 Main St", "Geolocation": "40.7128,-74.0060", "Type_of_Address": "Residential"},
      // 19 more
    ]
    // Other tables
  }
  ```

#### 8. **Additional Features**
- **Search Bar**: Global search in sidebar to find crimes, locations, or officers by keyword.
- **Dark Mode**: Default dark mode, optimized for readability.
- **Loading States**: Skeleton loaders (dark gray placeholders) during data fetch.
- **Error Handling**: Muted red error messages (e.g., "Failed to load data") with retry button.
- **Accessibility**: Keyboard navigation, ARIA labels, WCAG-compliant contrast.
- **Footer**: Links to "About Our Project" and "Made By", copyright "© 2025 Crime Data Analysis".

#### 9. **Technical Requirements**
- **Framework**: React.js with Vite for fast builds.
- **Styling**: Tailwind CSS (npm-installed, not CDN) for responsive design.
- **Charts/Maps**: Chart.js for bar/line/pie charts, `react-leaflet` for maps.
- **Dependencies**:
  - `react`, `react-dom`, `react-router-dom`.
  - `tailwindcss`, `postcss`, `autoprefixer`.
  - `chart.js`, `react-chartjs-2`, `react-leaflet`, `leaflet`.
- **Build**: Production-ready with minified CSS/JS, deployable to Vercel/Netlify.
- **Code Structure**:
  - Components: `Navbar`, `Dashboard`, `CrimeReports`, `About`, `MadeBy`, `Chart`, `Map`.
  - Pages: `/home`, `/crime-reports`, `/locations`, `/about`.
  - API hooks: `useEffect` and `fetch` for data.

#### 10. **Deliverables**
- Functional website hosted on Riplit AI or downloadable ZIP.
- Source code with documentation (`npm install`, `npm run dev`).
- Instructions for API integration or mock data replacement.
- Responsive design tested on desktop, tablet, mobile.
- Polished UI aligning with crime analysis theme.

### Example Mockup
- **Home**:
  - Sidebar: Navy blue, neon cyan links.
  - Header: "Crime Data Analysis Dashboard" (white, Montserrat).
  - Cards: Dark gray, "Total Crimes: 20", muted red borders.
  - Charts: Bar (crime types), map (locations), neon cyan on dark gray.
- **Crime Reports**:
  - Filters: Dark gray dropdowns, white text.
  - Table: Dark gray, white text, muted red hover.
  - Modal: Frosted glass, crime details, weather, social media.
- **About**:
  - Navy blue, subtle crime map background, white text.
- **Made By**:
  - Dark gray, neon cyan names, muted red badges.

### Notes
- **Database**: Use the 20 records per table for mockups or API responses.
- **Improvisation**: Add subtle design elements (e.g., crime tape borders) to enhance the mysterious vibe without clutter.
- **Avoid**: No features like real-time tracking or predictive analytics.

Thank you for building a professional, user-friendly, and visually striking dashboard that showcases our Crime Data Analysis project using the `CrimeDataAnalysis1` database!

---

This prompt integrates the `CrimeDataAnalysis1` database details, ensuring Riplit AI builds a dashboard that accurately reflects the provided schema and data. It maintains the dark, mysterious theme, includes all requested sections, and provides clear guidance for functionality. If you need help with backend API setup, specific chart implementations, or deployment, let me know!